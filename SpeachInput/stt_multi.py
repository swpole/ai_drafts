import gradio as gr
import os

def transcribe_audio(audio_path):
    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –∞—É–¥–∏–æ –≤ —Ç–µ–∫—Å—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –ø–æ–º–æ—â—å—é Whisper)
    # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–æ–≤ –º–æ–¥–µ–ª–∏ speech-to-text
    return "[–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ –∞—É–¥–∏–æ]"

def user_message_handler(message, history, audio_files):
    # message - —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # audio_files - —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö/–∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
    new_history = history.copy()

    # 1. –î–æ–±–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for audio_file in audio_files:
        if audio_file:  # –ï—Å–ª–∏ —Ñ–∞–π–ª –µ—Å—Ç—å
            # –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞—É–¥–∏–æ –≤ —á–∞—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
            transcribed_text = transcribe_audio(audio_file)  # –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É–µ–º –∞—É–¥–∏–æ
            new_history.append({"role": "user", "content": f"–ê—É–¥–∏–æ: {transcribed_text}"})

    # 2. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    if message.strip():
        new_history.append({"role": "user", "content": message})

    return "", new_history, []  # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –∏ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤

def bot_response(history):
    # –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞: –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    last_user_message = history[-1]["content"]
    bot_reply = f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {last_user_message}"
    history.append({"role": "assistant", "content": bot_reply})
    return history

with gr.Blocks() as demo:
    gr.Markdown("# –ß–∞—Ç-–±–æ—Ç —Å –∞—É–¥–∏–æ–≤–≤–æ–¥–æ–º")
    chatbot = gr.Chatbot(type="messages", height=500)
    with gr.Row():
        # –¢–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥
        text_input = gr.Textbox(placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç...", scale=4)
        # –ê—É–¥–∏–æ–≤–≤–æ–¥ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
        audio_input = gr.Audio(sources=["microphone"], type="filepath", interactive=True, scale=1)
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞
        file_upload = gr.UploadButton(label="üìÅ", file_types=[".wav", ".mp3"], scale=1)

    clear_btn = gr.Button("–û—á–∏—Å—Ç–∏—Ç—å")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ inputs (—Ç–µ–∫—Å—Ç, –∞—É–¥–∏–æ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã) –≤ –æ–¥–Ω–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ
    inputs = [text_input, audio_input, file_upload]
    submit_event = text_input.submit(
        fn=user_message_handler,
        inputs=[text_input, chatbot, file_upload],
        outputs=[text_input, chatbot, file_upload],
        queue=False
    ).then(
        fn=bot_response,
        inputs=chatbot,
        outputs=chatbot
    )

    clear_btn.click(lambda: (None, [], None), None, [text_input, chatbot, file_upload])

demo.launch()